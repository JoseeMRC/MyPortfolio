---
import SocialPill from "./icons/SocialPill.astro";
import LinkedInIcon from "./icons/LinkedIn.astro";
import MailIcon from "./icons/Mail.astro";

export interface Props {
  id?: string;
  title?: string;
}

const { id = "contact-modal", title = "Contacto" } = Astro.props;
---

<div
  id={id}
  class="hidden fixed inset-0 bg-black/50 backdrop-blur-md flex justify-center items-center z-50"
>
  <div
    class="bg-black/70 shadow-lg shadow-white/30 p-4 sm:p-6 rounded-lg w-11/12 sm:max-w-lg max-h-[80vh] overflow-y-auto relative"
  >
    <button class="close-modal absolute top-3 right-3 text-white text-2xl"
      >&times;</button
    >

    <h2 class="text-xl text-purple-300 text-center mb-4">{title}</h2>
    <h3 class="text-green-400/90 mb-2">Contacte mediante:</h3>
    <nav class="flex gap-4 mt-8 flex-wrap justify-center">
      <!-- LinkedIn -->
      <SocialPill
        href="https://www.linkedin.com/in/jose-manuel-rodriguez-carrasco/"
      >
        <LinkedInIcon class="size-4 md:size-5 lg:size-6" />
        LinkedIn
      </SocialPill>

      <!-- Mail -->
      <SocialPill href="mailto:00jmrc@gmail.com">
        <MailIcon class="size-4 md:size-5 lg:size-6" />
        00jmrc@gmail.com
      </SocialPill>
    </nav>
    <h3 class="text-green-400/90 mt-8">
      O bien, deje su mensaje con el siguiente formulario y nos pondremos en
      contacto.
    </h3>
    <nav class="flex gap-4 mt-8 flex-wrap justify-center">
      <slot name="social-links" />
    </nav>

    <form id="contact-form" class="space-y-4">
      <div>
        <label class="block text-white">Nombre</label>
        <input
          type="text"
          name="name"
          class="w-full p-2 rounded bg-gray-800 text-white"
          placeholder="Tu nombre"
          required
        />
      </div>
      <div>
        <label class="block text-white">Asunto</label>
        <input
          type="text"
          name="subject"
          class="w-full p-2 rounded bg-gray-800 text-white"
          placeholder="El asunto de tu mensaje"
          required
        />
      </div>
      <div>
        <label class="block text-white">Correo</label>
        <input
          type="email"
          name="email"
          class="w-full p-2 rounded bg-gray-800 text-white"
          placeholder="Tu correo"
          required
        />
      </div>

      <div>
        <label class="block text-white">Mensaje</label>
        <textarea
          name="message"
          class="w-full p-2 rounded bg-gray-800 text-white"
          rows="4"
          placeholder="Tu mensaje"
          required></textarea>
      </div>

      <button
        type="submit"
        class="w-full bg-purple-500 text-white py-2 rounded-lg">Enviar</button
      >
    </form>

    <p id="form-message" class="text-white mt-2"></p>
  </div>
</div>


<script>
  // Usar addEventListener para escuchar el evento 'submit' del formulario
  document
    .getElementById("contact-form")
    ?.addEventListener("submit", async function handleSubmit(event) {
      event.preventDefault();

      const formData = new FormData(event.target as HTMLFormElement);
      const data = Object.fromEntries(formData);

      const response = await fetch("/api/sendEmail", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data),
      });

      const result = await response.json();
      const formMessage = document.getElementById("form-message");

      // Comprobamos que `formMessage` no sea null
      if (formMessage) {
        if (result.success) {
          formMessage.textContent = "Mensaje enviado con Ã©xito!";

          // Para limpiar los campos del formulario
          const form = document.getElementById("contact-form") as HTMLFormElement;
          form.reset();
        } else {
          formMessage.textContent = "Hubo un error al enviar el mensaje.";
        }
      }
    });
</script>


